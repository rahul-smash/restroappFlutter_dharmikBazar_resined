def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def centreDetails = [
        applicationId  : PACKAGE_NAME,// The name shown on the Android Launcher.
        name           : APPLICATION_NAME,// The name shown on the Android Launcher.
        keyAlias       : keyAlias,
        keyPassword    : keyPassword,
        storeFileLocal : storeFileLocal,
        storePassword  : storePassword,
]

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


android {
    compileSdkVersion 33

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specifcom.app.hotpot"
        applicationId "com.dharmik.bazaar"
        minSdkVersion 21
        targetSdkVersion 33
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue "string", "appName", centreDetails.name
    }
    signingConfigs {
        release {
            keyAlias centreDetails.keyAlias
            keyPassword centreDetails.keyPassword
            storeFile file(centreDetails.storeFileLocal)
            storePassword centreDetails.storePassword
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    gradle.buildFinished { buildResult ->
        println "*************BUILD FINISHED*************"
        println "build failure - " + buildResult.failure
    }
    configurations.all {
        resolutionStrategy.force 'com.google.android.gms:play-services-location:21.0.1'
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    implementation 'com.google.firebase:firebase-messaging:20.1.5'
    implementation 'com.google.firebase:firebase-analytics:17.3.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
}
// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
// ADD THIS AT THE BOTTOM
//apply plugin: 'io.fabric'
//apply plugin: 'com.google.gms.google-services'